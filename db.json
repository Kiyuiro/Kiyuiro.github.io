{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/flex-block/source/avatar.ico","path":"avatar.ico","modified":0,"renderable":1},{"_id":"themes/flex-block/source/avatar.png","path":"avatar.png","modified":0,"renderable":1},{"_id":"themes/flex-block/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/flex-block/source/icons-192.png","path":"icons-192.png","modified":0,"renderable":1},{"_id":"themes/flex-block/source/icons-512.png","path":"icons-512.png","modified":0,"renderable":1},{"_id":"themes/flex-block/source/top_background.png","path":"top_background.png","modified":0,"renderable":1},{"_id":"themes/flex-block/source/manifest.json","path":"manifest.json","modified":0,"renderable":1},{"_id":"themes/flex-block/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/flex-block/source/js/script.js","path":"js/script.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/Markdown-LaTex.md","hash":"a813a35e4b2ad02e1cb815b49745dd5ab59e1d7a","modified":1637216851284},{"_id":"source/_posts/image.md","hash":"2d48a0251b0e3fd1a726859b2f836ed4f21a1ca5","modified":1637215325250},{"_id":"source/_posts/回溯算法.md","hash":"3e1ee9e26ee8f1d04ba1482d81e6b19cc3d2ba53","modified":1637215325258},{"_id":"source/_posts/复数.md","hash":"67ef8e4e2a413b0f6baa0d8b376f0f11d3102957","modified":1637215325239},{"_id":"source/_posts/本地服务器运行HTML.md","hash":"b8c442c058ffd114cc06183007eb980cd8a472a8","modified":1637215100571},{"_id":"source/_posts/第一篇博客.md","hash":"21e3eaa4cc42da00d775b74c86c297bd2945f4dd","modified":1637215100578},{"_id":"source/about/index.md","hash":"5c8fde81839eac84d07c2a29df80bb75aeee91ba","modified":1698401579652},{"_id":"source/links/index.md","hash":"28811cbd5d5e4382de59de3f4d1eaf6b490202ba","modified":1636594341048},{"_id":"source/message/index.md","hash":"e60de8c1524120fe07603916ba644621151e5329","modified":1636594545516},{"_id":"themes/flex-block/.gitignore","hash":"a010af107642d751bda979583183f366cf05fd7f","modified":1628007960000},{"_id":"themes/flex-block/README.md","hash":"4211b58330f001160be43a9adce16d6b2632c164","modified":1636166394180},{"_id":"themes/flex-block/LICENSE","hash":"da85e2f093615e3c008f60a94f85bf3d45106c95","modified":1628007960000},{"_id":"themes/flex-block/_config.yml","hash":"4ce04620564ef416581fc57656b1b03be711978c","modified":1637217247531},{"_id":"themes/flex-block/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1628007960000},{"_id":"themes/flex-block/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1628007960000},{"_id":"themes/flex-block/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1628007960000},{"_id":"themes/flex-block/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1628007960000},{"_id":"themes/flex-block/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1628007960000},{"_id":"themes/flex-block/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1628007960000},{"_id":"themes/flex-block/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1628007960000},{"_id":"themes/flex-block/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1628007960000},{"_id":"themes/flex-block/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1628007960000},{"_id":"themes/flex-block/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1628007960000},{"_id":"themes/flex-block/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1628007960000},{"_id":"themes/flex-block/languages/zh-CN.yml","hash":"eb0ef000853ecc6d5db678dd5b71caf53e809d02","modified":1628007960000},{"_id":"themes/flex-block/layout/archive.ejs","hash":"691837b349f9c4c11651d3a45776130cbde3587e","modified":1628007960000},{"_id":"themes/flex-block/layout/category.ejs","hash":"c631331af04cbfb8eb4567262a369be74fdf4acb","modified":1628007960000},{"_id":"themes/flex-block/layout/index.ejs","hash":"1170f7c070d40374753ac343783b9795349f6ec9","modified":1628007960000},{"_id":"themes/flex-block/layout/layout.ejs","hash":"97858f04a1869f915888a9391995fd77e93d11b3","modified":1628007960000},{"_id":"themes/flex-block/layout/mathjax.ejs","hash":"8130c905b84cf2c7b37b6cc21f4c43c238325bc4","modified":1698401579691},{"_id":"themes/flex-block/layout/post.ejs","hash":"5a649a3581223111945b795e4b25eea414979c69","modified":1636173784233},{"_id":"themes/flex-block/layout/page.ejs","hash":"1efd4bc229345efff68aa47ec4bf9a774ebee874","modified":1628007960000},{"_id":"themes/flex-block/layout/tag.ejs","hash":"5d7eaf2d7cee35d6ec957db5edbf81f38b450ed7","modified":1628007960000},{"_id":"themes/flex-block/scripts/index.js","hash":"7d85c41eb5ebddc4c79213c39e4cee83c719ec34","modified":1628007960000},{"_id":"themes/flex-block/source/avatar.png","hash":"374d9fe4510183ac003d24774c4b4b214bad63a0","modified":1636522120686},{"_id":"themes/flex-block/source/icons-192.png","hash":"8cd106d9039f1d5aa8163ecd4a5e352058a0f6cf","modified":1636171315517},{"_id":"themes/flex-block/source/manifest.json","hash":"2088b35862949ca226a2b7b3d06d50c25ef721a0","modified":1628007960000},{"_id":"themes/flex-block/layout/_partial/article-list.ejs","hash":"677b77c66809bd52c78bad7dba342f2a699881f8","modified":1636176973182},{"_id":"themes/flex-block/layout/_partial/footer-other.ejs","hash":"9e93e20f3e3ded687abe00a6478e3c4dbfff479e","modified":1628007960000},{"_id":"themes/flex-block/layout/_partial/content.ejs","hash":"a979886cae5056027f64794864b9d0cf14c99977","modified":1698401579668},{"_id":"themes/flex-block/layout/_partial/footer-script.ejs","hash":"8a5834bbff942b96960ae7f40f13ce4869cfa3b2","modified":1628007960000},{"_id":"themes/flex-block/layout/_partial/footer.ejs","hash":"ec1b0fc3c90b768a9e5a7e17d12865661f6a6976","modified":1636179744535},{"_id":"themes/flex-block/layout/_partial/header.ejs","hash":"a111a0a8acbad610f28fb6da133e8dc8d73428ab","modified":1636176417099},{"_id":"themes/flex-block/layout/_partial/nav.ejs","hash":"7da8b959230e2c3b1f20413263c578ad46a6b1a5","modified":1698401579671},{"_id":"themes/flex-block/layout/_partial/page.ejs","hash":"2a7b3a2c9438fd00f4a3b7258b83f79c09f8395b","modified":1628007960000},{"_id":"themes/flex-block/layout/_partial/pagination.ejs","hash":"51a0986190719eea34e8624c87b346b4a199e49c","modified":1628007960000},{"_id":"themes/flex-block/layout/_svg/icon-article.svg","hash":"b15bfce0bc9bacf7b2309e3d0a0169c80c688ee6","modified":1698401579673},{"_id":"themes/flex-block/layout/_svg/icon-categories.svg","hash":"b5fde389c24206ca6e9a66e0c8f2182e83ef157e","modified":1698401579674},{"_id":"themes/flex-block/layout/_svg/icon-notice.svg","hash":"7b4a60068fe2f6efdc7fced5c8042c5036169928","modified":1698401579675},{"_id":"themes/flex-block/layout/_svg/icon-link.svg","hash":"c2f7187d77514a90ea8b7d3b46f3cf49f6608867","modified":1698401579674},{"_id":"themes/flex-block/layout/_svg/icon-tags.svg","hash":"2bf37e99f7e1a42390b01f078ada26b49bbacab9","modified":1698401579676},{"_id":"themes/flex-block/layout/_svg/icon-toc.svg","hash":"5db4ece5f1099a997ad929e5bde940409fb7ef54","modified":1698401579676},{"_id":"themes/flex-block/layout/_svg/social-bilibili.svg","hash":"74b4ec1357cfb82ca8df11f006204992e94b87a7","modified":1698401579677},{"_id":"themes/flex-block/layout/_svg/social-github.svg","hash":"20c1b5fd5e06d10fb1e2cd83da0a18629dbe9c9d","modified":1628007960000},{"_id":"themes/flex-block/layout/_svg/social-steam.svg","hash":"2350b13b2bd320b21447be0d1a1d8ef522a5b63d","modified":1698401579679},{"_id":"themes/flex-block/layout/_svg/social-ins.svg","hash":"fdcaac4ecfa35a05765a9aead8ed52c46634f4ed","modified":1628007960000},{"_id":"themes/flex-block/layout/_svg/social-twitter.svg","hash":"4c7ffcf7f6f17c6646a5f11e7540531bdb7b9c90","modified":1636169279241},{"_id":"themes/flex-block/layout/_svg/social-weibo.svg","hash":"ec9dd4c6d4cd7e1c860054c84cef570c7bbd0f35","modified":1628007960000},{"_id":"themes/flex-block/layout/_svg/social-zhihu.svg","hash":"c7dfaa6791aea630f418821890ae97ac4153ef50","modified":1628007960000},{"_id":"themes/flex-block/layout/_widget/article-nav.ejs","hash":"343bb11d2c92beecafe9605efea93e7f4b293911","modified":1698401579682},{"_id":"themes/flex-block/layout/_widget/category.ejs","hash":"7b0adbd2c6f3482caac9964a2d2804c2d9fdc93c","modified":1698401579683},{"_id":"themes/flex-block/layout/_widget/comment.ejs","hash":"5fa37e58464f1106678d6bbf9f8f256fde573d01","modified":1628007960000},{"_id":"themes/flex-block/layout/_widget/date.ejs","hash":"5c275ec71f7ce628599683393ae71cf95196f71f","modified":1628007960000},{"_id":"themes/flex-block/layout/_widget/tag.ejs","hash":"385d0e6bb6fcbe0bd8825362daaa7e4fc386aab3","modified":1698401579685},{"_id":"themes/flex-block/layout/_widget/widget-author.ejs","hash":"06450ce16818aa514acc464708b8c9d3889facf3","modified":1698401579685},{"_id":"themes/flex-block/layout/_widget/widget-categorys.ejs","hash":"8f97f3ec89c19b5a47edf60f987935c4067bd0fc","modified":1698401579686},{"_id":"themes/flex-block/layout/_widget/widget-notice.ejs","hash":"37e6243041e56a88876d2c82aa1b460287e6ee01","modified":1698401579686},{"_id":"themes/flex-block/layout/_widget/widget-tags.ejs","hash":"82416d5a2cc84cee47b327405aeb4dbb590cc5d3","modified":1698401579687},{"_id":"themes/flex-block/layout/_widget/widget-toc.ejs","hash":"1c946383a9856676d28d9ad8348f1ab7671b6f36","modified":1698401579688},{"_id":"themes/flex-block/layout/plug-in/aplayer.ejs","hash":"081184379480e5e154a7d06e1e059a38e964f10c","modified":1628007960000},{"_id":"themes/flex-block/layout/plug-in/dplayer.ejs","hash":"bea95d7c81c86ff88e5cc20f3a7a7afaf311a70e","modified":1628007960000},{"_id":"themes/flex-block/source/css/style.styl","hash":"f388a27e55579eb3ecd726c580c2253a48f68fc3","modified":1628007960000},{"_id":"themes/flex-block/source/js/script.js","hash":"8f0900b1b6bbd1fdc463fbc77f3deb5e598c9871","modified":1628007960000},{"_id":"themes/flex-block/source/css/_partial/card.styl","hash":"cb6e5b6ff13360e5363a637ce1821bde70715c6a","modified":1698402885355},{"_id":"themes/flex-block/source/css/_partial/content.styl","hash":"e9bfcf6a7ce43256c3cb589df1c7472c40534da8","modified":1628007960000},{"_id":"themes/flex-block/source/css/_partial/header.styl","hash":"fa79f285c25b206307efdcae91b8363efc920980","modified":1628007960000},{"_id":"themes/flex-block/source/css/_partial/footer.styl","hash":"00796f433ed85bd9186be3b2d16deb90b682d1d1","modified":1628007960000},{"_id":"themes/flex-block/source/css/_partial/nav.styl","hash":"8a90c260ee4ab99001fc414accd661e7fdb235d5","modified":1628007960000},{"_id":"themes/flex-block/source/css/_partial/page.styl","hash":"2d0fcee623a70283e53134fb2e16f2f7fa4d6d95","modified":1628007960000},{"_id":"themes/flex-block/source/css/_partial/pagination.styl","hash":"bdd9fede0c8f23af3e9b0cbc4f356e3148721416","modified":1628007960000},{"_id":"themes/flex-block/source/css/_util/mixins.styl","hash":"70cf83071cfa7823045ea6f355f47b0aa26d23f8","modified":1628007960000},{"_id":"themes/flex-block/source/css/_util/theme.styl","hash":"1d7c69498b68e85f2a048acfa6924df5070ddc48","modified":1628007960000},{"_id":"themes/flex-block/source/css/_util/variables.styl","hash":"ccd0ee13e0a38bb41b3a5fff1c3b32eeb35beff7","modified":1628007960000},{"_id":"themes/flex-block/source/icons-512.png","hash":"c2cd59a7712738831ee0cca4338343d407777a4b","modified":1636171315512},{"_id":"themes/flex-block/screenshots/flex-block--home.jpeg","hash":"7f6c738298108020ab2e4918592007a2d4bcb9d8","modified":1628007960000},{"_id":"themes/flex-block/screenshots/flex-block--post.jpeg","hash":"bc607db875e42fe2c82ed5130c07d67cca5adc41","modified":1628007960000},{"_id":"themes/flex-block/source/avatar.ico","hash":"8fcf5eba92de3fb33152ad62965f01643f4c0ef6","modified":1636522130297},{"_id":"themes/flex-block/source/favicon.ico","hash":"8fcf5eba92de3fb33152ad62965f01643f4c0ef6","modified":1636522130297},{"_id":"themes/flex-block/screenshots/flex-block.png","hash":"93a5456d4f3a51f5e9fd4a957b85584273083fe6","modified":1628007960000},{"_id":"themes/flex-block/source/top_background.png","hash":"b5d2034a60b9268440188bcc9cc9aa33f8b53330","modified":1625008814000},{"_id":"public/archives/index.html","hash":"25192af79c40c1b86dca2232c79f3ebaecf6d4b8","modified":1637217217627},{"_id":"public/archives/2020/index.html","hash":"e8c33bcb5d6ce1dde57afd085eb0230b8b8e8fc7","modified":1637217217627},{"_id":"public/archives/2020/07/index.html","hash":"65280245e4486c426924d05fce420118e4059f55","modified":1637217217627},{"_id":"public/archives/2020/08/index.html","hash":"a74ad89e481cbbc4ed3e18aa86518282befa9398","modified":1637217217627},{"_id":"public/archives/2021/index.html","hash":"5744162e01a30da4a05511f2ba928060bd1b35f9","modified":1637217217627},{"_id":"public/archives/2021/11/index.html","hash":"5744162e01a30da4a05511f2ba928060bd1b35f9","modified":1637217217627},{"_id":"public/index.html","hash":"0dad56aaaaffbcc57eaef51a16268143879e9b2e","modified":1637217217627},{"_id":"public/tags/数学/index.html","hash":"71d198b05fe0db8ed5b7dd2a928bb01acc50e5f6","modified":1637217217627},{"_id":"public/tags/Markdown/index.html","hash":"20f42a38a8752dc843bcfdff73a53088e98d00e4","modified":1637217217627},{"_id":"public/tags/测试/index.html","hash":"09f2cef5e655cf466bbd02872e43adf2f4135efb","modified":1637217217627},{"_id":"public/tags/算法/index.html","hash":"1c7fd7d70dfae119a3e23b24b74b0ce64ae8c12b","modified":1637217217627},{"_id":"public/tags/Java/index.html","hash":"9ccd4a054bc8ebaa43efd8c8e6590d768cff6402","modified":1637217217627},{"_id":"public/tags/HTML/index.html","hash":"b09f50a7002566de56ecac58822b8b3224c73486","modified":1637217217627},{"_id":"public/tags/Node/index.html","hash":"8bb7ecdcba8484214180f6c4620c7d08566d808e","modified":1637217217627},{"_id":"public/about/index.html","hash":"3b5728cde49ef25320dfcd2e974b9cd33ef467ca","modified":1637217217627},{"_id":"public/message/index.html","hash":"5b6775a8707f3c3e208d50e82670b27d27d83d77","modified":1637217217627},{"_id":"public/links/index.html","hash":"bcb234a255a6c2a9fc3fe3ea6813d5b1983aca6c","modified":1637217217627},{"_id":"public/2021/11/09/本地服务器运行HTML/index.html","hash":"82e47870c897c5df00c16703fb22fc53c52204c7","modified":1637217217627},{"_id":"public/2021/11/06/Markdown-LaTex/index.html","hash":"a8934ef0b4dc336024bbb160ec53e6de614e6f2c","modified":1637217217627},{"_id":"public/2021/11/06/复数/index.html","hash":"5048b2562b47ffc6de3af0fdd5ee597cd3287416","modified":1637217217627},{"_id":"public/2020/08/25/回溯算法/index.html","hash":"866bedf534c8c04d04c722503f935811098847f9","modified":1637217217627},{"_id":"public/2020/07/11/image/index.html","hash":"a730b918ecd9319e31d8954e5bceb8037e85b3b1","modified":1637217217627},{"_id":"public/2020/07/11/第一篇博客/index.html","hash":"05a9e529ce51b133bc8dce31d2d77ccf1708a52c","modified":1637217217627},{"_id":"public/icons-192.png","hash":"8cd106d9039f1d5aa8163ecd4a5e352058a0f6cf","modified":1637217217627},{"_id":"public/avatar.png","hash":"374d9fe4510183ac003d24774c4b4b214bad63a0","modified":1637217217627},{"_id":"public/icons-512.png","hash":"c2cd59a7712738831ee0cca4338343d407777a4b","modified":1637217217627},{"_id":"public/manifest.json","hash":"70ae21c5c320fbc0df5922a4baf3fa73d5343959","modified":1637217217627},{"_id":"public/js/script.js","hash":"8f0900b1b6bbd1fdc463fbc77f3deb5e598c9871","modified":1637217217627},{"_id":"public/css/style.css","hash":"d144f2d72758599aef854441410f1dcf63bc6639","modified":1637217217627},{"_id":"public/avatar.ico","hash":"8fcf5eba92de3fb33152ad62965f01643f4c0ef6","modified":1637217217627},{"_id":"public/favicon.ico","hash":"8fcf5eba92de3fb33152ad62965f01643f4c0ef6","modified":1637217217627},{"_id":"public/top_background.png","hash":"b5d2034a60b9268440188bcc9cc9aa33f8b53330","modified":1637217217627},{"_id":"source/_posts/markdown_latex.md","hash":"ae693d4b34defa4edf20cf930853750359dbe061","modified":1698401579646},{"_id":"source/_posts/scoop use.md","hash":"48b13374ba74c63dcd01a34efef2790ce83aa7c1","modified":1698401579647},{"_id":"source/_posts/vite_nvm_nrm_使用.md","hash":"d4681b7624f90ad7ccb9e0713ee71349b371e2c3","modified":1698401579648}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2021-11-06T02:44:59.000Z","mathjax":true,"_content":"\n## Info\n\n### 一些小游戏\n[扫雷](https://kiyuiro.github.io/Minesweeper)\n[俄罗斯方块](https://kiyuiro.github.io/Tetris)\n\n## Game\n\n|  |  |  |\n| ---- | ------ | --- |\n| | |\n| 原神 | 国服 | 103,419,228 |\n| 明日方舟 | 单元格 | 绮羽伊罗#1571 |\n| 云图计划 | 官服 | 268805 |\n| Arcaea |   | 198,736,573 |\n| Steam | 国区 | [Kiyuiro](https://steamcommunity.com/profiles/76561198308398351)|\n| Steam | 俄区 | [Kiyuiro](https://steamcommunity.com/profiles/76561199212645785)|\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-11-06 10:44:59\nmathjax: true\n---\n\n## Info\n\n### 一些小游戏\n[扫雷](https://kiyuiro.github.io/Minesweeper)\n[俄罗斯方块](https://kiyuiro.github.io/Tetris)\n\n## Game\n\n|  |  |  |\n| ---- | ------ | --- |\n| | |\n| 原神 | 国服 | 103,419,228 |\n| 明日方舟 | 单元格 | 绮羽伊罗#1571 |\n| 云图计划 | 官服 | 268805 |\n| Arcaea |   | 198,736,573 |\n| Steam | 国区 | [Kiyuiro](https://steamcommunity.com/profiles/76561198308398351)|\n| Steam | 俄区 | [Kiyuiro](https://steamcommunity.com/profiles/76561199212645785)|\n","updated":"2023-10-27T10:12:59.652Z","path":"about/index.html","_id":"ckw4kuyj60000z8umckkz6i80","comments":1,"layout":"page","content":"<h2 id=\"info\">Info</h2>\r\n<h3 id=\"一些小游戏\">一些小游戏</h3>\r\n<p><a href=\"https://kiyuiro.github.io/Minesweeper\">扫雷</a> <a\r\nhref=\"https://kiyuiro.github.io/Tetris\">俄罗斯方块</a></p>\r\n<h2 id=\"game\">Game</h2>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 30%\" />\r\n<col style=\"width: 46%\" />\r\n<col style=\"width: 23%\" />\r\n</colgroup>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>原神</td>\r\n<td>国服</td>\r\n<td>103,419,228</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>明日方舟</td>\r\n<td>单元格</td>\r\n<td>绮羽伊罗#1571</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>云图计划</td>\r\n<td>官服</td>\r\n<td>268805</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>Arcaea</td>\r\n<td></td>\r\n<td>198,736,573</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>Steam</td>\r\n<td>国区</td>\r\n<td><a\r\nhref=\"https://steamcommunity.com/profiles/76561198308398351\">Kiyuiro</a></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>Steam</td>\r\n<td>俄区</td>\r\n<td><a\r\nhref=\"https://steamcommunity.com/profiles/76561199212645785\">Kiyuiro</a></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"info\">Info</h2>\r\n<h3 id=\"一些小游戏\">一些小游戏</h3>\r\n<p><a href=\"https://kiyuiro.github.io/Minesweeper\">扫雷</a> <a\r\nhref=\"https://kiyuiro.github.io/Tetris\">俄罗斯方块</a></p>\r\n<h2 id=\"game\">Game</h2>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 30%\" />\r\n<col style=\"width: 46%\" />\r\n<col style=\"width: 23%\" />\r\n</colgroup>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>原神</td>\r\n<td>国服</td>\r\n<td>103,419,228</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>明日方舟</td>\r\n<td>单元格</td>\r\n<td>绮羽伊罗#1571</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>云图计划</td>\r\n<td>官服</td>\r\n<td>268805</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>Arcaea</td>\r\n<td></td>\r\n<td>198,736,573</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>Steam</td>\r\n<td>国区</td>\r\n<td><a\r\nhref=\"https://steamcommunity.com/profiles/76561198308398351\">Kiyuiro</a></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>Steam</td>\r\n<td>俄区</td>\r\n<td><a\r\nhref=\"https://steamcommunity.com/profiles/76561199212645785\">Kiyuiro</a></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n"},{"title":"message","date":"2021-11-06T03:37:40.000Z","layout":"messages","_content":"","source":"message/index.md","raw":"---\ntitle: message\ndate: 2021-11-06 11:37:40\nlayout: messages\n---\n","updated":"2021-11-11T01:35:45.516Z","path":"message/index.html","comments":1,"_id":"ckw4kuyjd0002z8um279r65ak","content":"\r\n","site":{"data":{}},"excerpt":"","more":"\r\n"},{"title":"links","date":"2021-11-06T02:47:05.000Z","_content":"\n## 有人吗\n\n### 没有","source":"links/index.md","raw":"---\ntitle: links\ndate: 2021-11-06 10:47:05\n---\n\n## 有人吗\n\n### 没有","updated":"2021-11-11T01:32:21.048Z","path":"links/index.html","comments":1,"layout":"page","_id":"ckw4kuyjg0005z8umbk4le4fy","content":"<h2 id=\"有人吗\">有人吗</h2>\r\n<h3 id=\"没有\">没有</h3>\r\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"有人吗\">有人吗</h2>\r\n<h3 id=\"没有\">没有</h3>\r\n"}],"Post":[{"title":"image","date":"2020-07-11T03:54:00.000Z","cover":"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/image/cover-2021-11-18-11-02-58-3aa107dbe9c59b9861a4ec6ea5752d77-5f239d.png","_content":"\n![](https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/image/cover-2021-11-18-11-02-58-3aa107dbe9c59b9861a4ec6ea5752d77-5f239d.png)","source":"_posts/image.md","raw":"---\ntitle: image\ndate: 2020-07-11 11:54:00\ntags: [测试]\ncover: https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/image/cover-2021-11-18-11-02-58-3aa107dbe9c59b9861a4ec6ea5752d77-5f239d.png\n---\n\n![](https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/image/cover-2021-11-18-11-02-58-3aa107dbe9c59b9861a4ec6ea5752d77-5f239d.png)","slug":"image","published":1,"updated":"2021-11-18T06:02:05.250Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckw4kuyjd0003z8um1sqshit7","content":"<p><img src=\"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/image/cover-2021-11-18-11-02-58-3aa107dbe9c59b9861a4ec6ea5752d77-5f239d.png\" /></p>\r\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/image/cover-2021-11-18-11-02-58-3aa107dbe9c59b9861a4ec6ea5752d77-5f239d.png\" /></p>\r\n"},{"title":"回溯算法","date":"2020-08-25T06:35:12.000Z","cover":"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/回溯算法/cover-2021-11-18-11-08-11-eabcde123d6a8c5d7d560baab0d2ab4f-2c0de6.png","_content":"# 讲解\n\n### 基础模板\n``` java\n    // 回溯算法框架\n    List<Value> result;\n    void backtrack(路径, 选择列表) {\n        if(满足结束的条件) {\n            result.add(路径);\n            return;\n        }\n        for(选择 : 选择列表) {\n            做选择;\n            backtrack(路径, 选择列表);\n            撤销选择;\n        }\n    }\n\n    // 多叉树遍历框架\n    void traverse(TreeNode root) {\n        if(root == null) {\n            return;\n        }\n        for(TreeNode child : root.children) {\n            traverse(child);\n        }\n    }\n```\n[回溯算法核心套路详解](https://www.bilibili.com/video/BV1P5411N7Xc?from=search&seid=3497534487321855371)\n\n# 案例\n\n### [1. 全排列](https://leetcode-cn.com/problems/permutations/)\n给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。\n``` java\n    // 存储全排列的结果\n    List<List<Integer>> res = new ArrayList<>();\n    public static List<List<Integer>> solution(int[] nums) {\n        // 记录路径\n        List<Integer> track = new ArrayList<>()\n        backtrack(nums, res, track);\n        return res;\n    }\n\n    // 回溯算法框架\n    public static void backtrack(int[] nums, List<List<Integer>> res, List<Integer> track) {\n        // 路径长度等于数组长度, 说明所有的数字已经添加\n        if (track.size() == nums.length) {\n            /* \n             将记录添加进结果中\n             注: 不能直接使用 res.add(track)\n                 因为这样会使 res 指向的对象 track 在不断地增加和删除元素, 最后会变成空\n                 得到的结果会变成类似于 [[][][][][]],\n                 应该使用 new ArrayList(track) 拷贝一个对象插入 res\n            */\n            res.add(new ArrayList<>(track));\n            return;\n        }\n        for (int num : nums) {\n            // 判断数字是否已经添加进列表\n            if (track.contains(num))\n                continue;\n            // 做选择\n            track.add(num);\n            // 进入下一层决策树\n            backtrack(nums, res, track);\n            // 取消选择\n            track.remove(track.size() - 1);\n        }\n    }\n```\n\n![](https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/回溯算法/回溯算法-2021-11-18-11-08-11-06da3269f00273f999bddd359298ad09-de032b.png)\n\n### [2. 所有可能的路径](https://leetcode-cn.com/problems/all-paths-from-source-to-target/)\n给你一个有 n 个节点的 有向无环图(DAG)，请你找出所有从节点 0 到节点 n-1 的路径并输出(不要求按特定顺序)\n\n二维数组的第 i 个数组中的单元都表示有向图中 i 号节点所能到达的下一些节点，空就是没有下一个结点了\n\n译者注：有向图是有方向的，即规定了 a → b 你就不能从 b → a\n``` java\n    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {\n        List<Integer> path = new ArrayList<>();\n        path.add(0);\n        dfs(graph, path, 0);\n        return res;\n    }\n\n    public void dfs(int[][] graph, List<Integer> path, int index) {\n        if (index == graph.length - 1) {\n            res.add(new ArrayList<>(path));\n            return;\n        }\n        for(int p : graph[index]) {\n            if(path.contains(p))\n                continue;\n            path.add(p);\n            dfs(graph, path, p);\n            path.remove(path.size() - 1);\n        }\n    }\n```","source":"_posts/回溯算法.md","raw":"---\ntitle: 回溯算法\ndate: 2020-08-25 14:35:12\ntags: [算法, Java]\ncover: https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/回溯算法/cover-2021-11-18-11-08-11-eabcde123d6a8c5d7d560baab0d2ab4f-2c0de6.png\n---\n# 讲解\n\n### 基础模板\n``` java\n    // 回溯算法框架\n    List<Value> result;\n    void backtrack(路径, 选择列表) {\n        if(满足结束的条件) {\n            result.add(路径);\n            return;\n        }\n        for(选择 : 选择列表) {\n            做选择;\n            backtrack(路径, 选择列表);\n            撤销选择;\n        }\n    }\n\n    // 多叉树遍历框架\n    void traverse(TreeNode root) {\n        if(root == null) {\n            return;\n        }\n        for(TreeNode child : root.children) {\n            traverse(child);\n        }\n    }\n```\n[回溯算法核心套路详解](https://www.bilibili.com/video/BV1P5411N7Xc?from=search&seid=3497534487321855371)\n\n# 案例\n\n### [1. 全排列](https://leetcode-cn.com/problems/permutations/)\n给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。\n``` java\n    // 存储全排列的结果\n    List<List<Integer>> res = new ArrayList<>();\n    public static List<List<Integer>> solution(int[] nums) {\n        // 记录路径\n        List<Integer> track = new ArrayList<>()\n        backtrack(nums, res, track);\n        return res;\n    }\n\n    // 回溯算法框架\n    public static void backtrack(int[] nums, List<List<Integer>> res, List<Integer> track) {\n        // 路径长度等于数组长度, 说明所有的数字已经添加\n        if (track.size() == nums.length) {\n            /* \n             将记录添加进结果中\n             注: 不能直接使用 res.add(track)\n                 因为这样会使 res 指向的对象 track 在不断地增加和删除元素, 最后会变成空\n                 得到的结果会变成类似于 [[][][][][]],\n                 应该使用 new ArrayList(track) 拷贝一个对象插入 res\n            */\n            res.add(new ArrayList<>(track));\n            return;\n        }\n        for (int num : nums) {\n            // 判断数字是否已经添加进列表\n            if (track.contains(num))\n                continue;\n            // 做选择\n            track.add(num);\n            // 进入下一层决策树\n            backtrack(nums, res, track);\n            // 取消选择\n            track.remove(track.size() - 1);\n        }\n    }\n```\n\n![](https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/回溯算法/回溯算法-2021-11-18-11-08-11-06da3269f00273f999bddd359298ad09-de032b.png)\n\n### [2. 所有可能的路径](https://leetcode-cn.com/problems/all-paths-from-source-to-target/)\n给你一个有 n 个节点的 有向无环图(DAG)，请你找出所有从节点 0 到节点 n-1 的路径并输出(不要求按特定顺序)\n\n二维数组的第 i 个数组中的单元都表示有向图中 i 号节点所能到达的下一些节点，空就是没有下一个结点了\n\n译者注：有向图是有方向的，即规定了 a → b 你就不能从 b → a\n``` java\n    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {\n        List<Integer> path = new ArrayList<>();\n        path.add(0);\n        dfs(graph, path, 0);\n        return res;\n    }\n\n    public void dfs(int[][] graph, List<Integer> path, int index) {\n        if (index == graph.length - 1) {\n            res.add(new ArrayList<>(path));\n            return;\n        }\n        for(int p : graph[index]) {\n            if(path.contains(p))\n                continue;\n            path.add(p);\n            dfs(graph, path, p);\n            path.remove(path.size() - 1);\n        }\n    }\n```","slug":"回溯算法","published":1,"updated":"2021-11-18T06:02:05.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckw4kuyjh0006z8um9g0c5b49","content":"<h1 id=\"讲解\">讲解</h1>\r\n<h3 id=\"基础模板\">基础模板</h3>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">// 回溯算法框架</span><br>List&lt;Value&gt; result;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">backtrack</span><span class=\"hljs-params\">(路径, 选择列表)</span> </span>&#123;<br>    <span class=\"hljs-keyword\">if</span>(满足结束的条件) &#123;<br>        result.add(路径);<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br>    <span class=\"hljs-keyword\">for</span>(选择 : 选择列表) &#123;<br>        做选择;<br>        backtrack(路径, 选择列表);<br>        撤销选择;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-comment\">// 多叉树遍历框架</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">traverse</span><span class=\"hljs-params\">(TreeNode root)</span> </span>&#123;<br>    <span class=\"hljs-keyword\">if</span>(root == <span class=\"hljs-keyword\">null</span>) &#123;<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br>    <span class=\"hljs-keyword\">for</span>(TreeNode child : root.children) &#123;<br>        traverse(child);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\r\n<p><a href=\"https://www.bilibili.com/video/BV1P5411N7Xc?from=search&amp;seid=3497534487321855371\">回溯算法核心套路详解</a></p>\r\n<h1 id=\"案例\">案例</h1>\r\n<h3 id=\"全排列\"><a href=\"https://leetcode-cn.com/problems/permutations/\">1. 全排列</a></h3>\r\n<p>给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。 <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">// 存储全排列的结果</span><br>List&lt;List&lt;Integer&gt;&gt; res = <span class=\"hljs-keyword\">new</span> ArrayList&lt;&gt;();<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> List&lt;List&lt;Integer&gt;&gt; solution(<span class=\"hljs-keyword\">int</span>[] nums) &#123;<br>    <span class=\"hljs-comment\">// 记录路径</span><br>    List&lt;Integer&gt; track = <span class=\"hljs-keyword\">new</span> ArrayList&lt;&gt;()<br>    backtrack(nums, res, track);<br>    <span class=\"hljs-keyword\">return</span> res;<br>&#125;<br><br><span class=\"hljs-comment\">// 回溯算法框架</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">backtrack</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span>[] nums, List&lt;List&lt;Integer&gt;&gt; res, List&lt;Integer&gt; track)</span> </span>&#123;<br>    <span class=\"hljs-comment\">// 路径长度等于数组长度, 说明所有的数字已经添加</span><br>    <span class=\"hljs-keyword\">if</span> (track.size() == nums.length) &#123;<br>        <span class=\"hljs-comment\">/* </span><br><span class=\"hljs-comment\">         将记录添加进结果中</span><br><span class=\"hljs-comment\">         注: 不能直接使用 res.add(track)</span><br><span class=\"hljs-comment\">             因为这样会使 res 指向的对象 track 在不断地增加和删除元素, 最后会变成空</span><br><span class=\"hljs-comment\">             得到的结果会变成类似于 [[][][][][]],</span><br><span class=\"hljs-comment\">             应该使用 new ArrayList(track) 拷贝一个对象插入 res</span><br><span class=\"hljs-comment\">        */</span><br>        res.add(<span class=\"hljs-keyword\">new</span> ArrayList&lt;&gt;(track));<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> num : nums) &#123;<br>        <span class=\"hljs-comment\">// 判断数字是否已经添加进列表</span><br>        <span class=\"hljs-keyword\">if</span> (track.contains(num))<br>            <span class=\"hljs-keyword\">continue</span>;<br>        <span class=\"hljs-comment\">// 做选择</span><br>        track.add(num);<br>        <span class=\"hljs-comment\">// 进入下一层决策树</span><br>        backtrack(nums, res, track);<br>        <span class=\"hljs-comment\">// 取消选择</span><br>        track.remove(track.size() - <span class=\"hljs-number\">1</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></p>\r\n<p><img src=\"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/回溯算法/回溯算法-2021-11-18-11-08-11-06da3269f00273f999bddd359298ad09-de032b.png\" /></p>\r\n<h3 id=\"所有可能的路径\"><a href=\"https://leetcode-cn.com/problems/all-paths-from-source-to-target/\">2. 所有可能的路径</a></h3>\r\n<p>给你一个有 n 个节点的 有向无环图(DAG)，请你找出所有从节点 0 到节点 n-1 的路径并输出(不要求按特定顺序)</p>\r\n<p>二维数组的第 i 个数组中的单元都表示有向图中 i 号节点所能到达的下一些节点，空就是没有下一个结点了</p>\r\n<p>译者注：有向图是有方向的，即规定了 a → b 你就不能从 b → a <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> List&lt;List&lt;Integer&gt;&gt; allPathsSourceTarget(<span class=\"hljs-keyword\">int</span>[][] graph) &#123;<br>    List&lt;Integer&gt; path = <span class=\"hljs-keyword\">new</span> ArrayList&lt;&gt;();<br>    path.add(<span class=\"hljs-number\">0</span>);<br>    dfs(graph, path, <span class=\"hljs-number\">0</span>);<br>    <span class=\"hljs-keyword\">return</span> res;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">dfs</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span>[][] graph, List&lt;Integer&gt; path, <span class=\"hljs-keyword\">int</span> index)</span> </span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (index == graph.length - <span class=\"hljs-number\">1</span>) &#123;<br>        res.add(<span class=\"hljs-keyword\">new</span> ArrayList&lt;&gt;(path));<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> p : graph[index]) &#123;<br>        <span class=\"hljs-keyword\">if</span>(path.contains(p))<br>            <span class=\"hljs-keyword\">continue</span>;<br>        path.add(p);<br>        dfs(graph, path, p);<br>        path.remove(path.size() - <span class=\"hljs-number\">1</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></p>\r\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"讲解\">讲解</h1>\r\n<h3 id=\"基础模板\">基础模板</h3>\r\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">// 回溯算法框架</span><br>List&lt;Value&gt; result;<br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">backtrack</span><span class=\"hljs-params\">(路径, 选择列表)</span> </span>&#123;<br>    <span class=\"hljs-keyword\">if</span>(满足结束的条件) &#123;<br>        result.add(路径);<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br>    <span class=\"hljs-keyword\">for</span>(选择 : 选择列表) &#123;<br>        做选择;<br>        backtrack(路径, 选择列表);<br>        撤销选择;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-comment\">// 多叉树遍历框架</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">traverse</span><span class=\"hljs-params\">(TreeNode root)</span> </span>&#123;<br>    <span class=\"hljs-keyword\">if</span>(root == <span class=\"hljs-keyword\">null</span>) &#123;<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br>    <span class=\"hljs-keyword\">for</span>(TreeNode child : root.children) &#123;<br>        traverse(child);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\r\n<p><a href=\"https://www.bilibili.com/video/BV1P5411N7Xc?from=search&amp;seid=3497534487321855371\">回溯算法核心套路详解</a></p>\r\n<h1 id=\"案例\">案例</h1>\r\n<h3 id=\"全排列\"><a href=\"https://leetcode-cn.com/problems/permutations/\">1. 全排列</a></h3>\r\n<p>给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。 <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">// 存储全排列的结果</span><br>List&lt;List&lt;Integer&gt;&gt; res = <span class=\"hljs-keyword\">new</span> ArrayList&lt;&gt;();<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> List&lt;List&lt;Integer&gt;&gt; solution(<span class=\"hljs-keyword\">int</span>[] nums) &#123;<br>    <span class=\"hljs-comment\">// 记录路径</span><br>    List&lt;Integer&gt; track = <span class=\"hljs-keyword\">new</span> ArrayList&lt;&gt;()<br>    backtrack(nums, res, track);<br>    <span class=\"hljs-keyword\">return</span> res;<br>&#125;<br><br><span class=\"hljs-comment\">// 回溯算法框架</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">backtrack</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span>[] nums, List&lt;List&lt;Integer&gt;&gt; res, List&lt;Integer&gt; track)</span> </span>&#123;<br>    <span class=\"hljs-comment\">// 路径长度等于数组长度, 说明所有的数字已经添加</span><br>    <span class=\"hljs-keyword\">if</span> (track.size() == nums.length) &#123;<br>        <span class=\"hljs-comment\">/* </span><br><span class=\"hljs-comment\">         将记录添加进结果中</span><br><span class=\"hljs-comment\">         注: 不能直接使用 res.add(track)</span><br><span class=\"hljs-comment\">             因为这样会使 res 指向的对象 track 在不断地增加和删除元素, 最后会变成空</span><br><span class=\"hljs-comment\">             得到的结果会变成类似于 [[][][][][]],</span><br><span class=\"hljs-comment\">             应该使用 new ArrayList(track) 拷贝一个对象插入 res</span><br><span class=\"hljs-comment\">        */</span><br>        res.add(<span class=\"hljs-keyword\">new</span> ArrayList&lt;&gt;(track));<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> num : nums) &#123;<br>        <span class=\"hljs-comment\">// 判断数字是否已经添加进列表</span><br>        <span class=\"hljs-keyword\">if</span> (track.contains(num))<br>            <span class=\"hljs-keyword\">continue</span>;<br>        <span class=\"hljs-comment\">// 做选择</span><br>        track.add(num);<br>        <span class=\"hljs-comment\">// 进入下一层决策树</span><br>        backtrack(nums, res, track);<br>        <span class=\"hljs-comment\">// 取消选择</span><br>        track.remove(track.size() - <span class=\"hljs-number\">1</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></p>\r\n<p><img src=\"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/回溯算法/回溯算法-2021-11-18-11-08-11-06da3269f00273f999bddd359298ad09-de032b.png\" /></p>\r\n<h3 id=\"所有可能的路径\"><a href=\"https://leetcode-cn.com/problems/all-paths-from-source-to-target/\">2. 所有可能的路径</a></h3>\r\n<p>给你一个有 n 个节点的 有向无环图(DAG)，请你找出所有从节点 0 到节点 n-1 的路径并输出(不要求按特定顺序)</p>\r\n<p>二维数组的第 i 个数组中的单元都表示有向图中 i 号节点所能到达的下一些节点，空就是没有下一个结点了</p>\r\n<p>译者注：有向图是有方向的，即规定了 a → b 你就不能从 b → a <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> List&lt;List&lt;Integer&gt;&gt; allPathsSourceTarget(<span class=\"hljs-keyword\">int</span>[][] graph) &#123;<br>    List&lt;Integer&gt; path = <span class=\"hljs-keyword\">new</span> ArrayList&lt;&gt;();<br>    path.add(<span class=\"hljs-number\">0</span>);<br>    dfs(graph, path, <span class=\"hljs-number\">0</span>);<br>    <span class=\"hljs-keyword\">return</span> res;<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">dfs</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span>[][] graph, List&lt;Integer&gt; path, <span class=\"hljs-keyword\">int</span> index)</span> </span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (index == graph.length - <span class=\"hljs-number\">1</span>) &#123;<br>        res.add(<span class=\"hljs-keyword\">new</span> ArrayList&lt;&gt;(path));<br>        <span class=\"hljs-keyword\">return</span>;<br>    &#125;<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> p : graph[index]) &#123;<br>        <span class=\"hljs-keyword\">if</span>(path.contains(p))<br>            <span class=\"hljs-keyword\">continue</span>;<br>        path.add(p);<br>        dfs(graph, path, p);<br>        path.remove(path.size() - <span class=\"hljs-number\">1</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></p>\r\n"},{"title":"本地服务器运行HTML","date":"2021-11-09T00:37:06.000Z","cover":"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/本地服务器运行HTML/cover-2021-11-18-11-03-07-71f9e96715716d8aebafcf10f15f2a40-1978b0.jpg","_content":"\n## 原因\n之前在编写JS代码的时候使用ES6语法对其他JS文件进行导入, 就需要对html文件中的script标签添加type=\"module\".\n但这样会导致程序内的路径从本地相对路径变为服务器的路径, 导致查找不到需要的文件. 因为是直接运行, 不想其他服务\n一样, 启动时都会使用一个本地的端口作为服务器, 因此需要一个在运行本地html文件时, 像运行在服务器上一样的模块.\n\n## 解决\n首先是我们需要安装一个 http-server 的服务.\n``` bash\n# 建议全局安装, 以便于以后的使用\nnpm install http-server -g\n```\n\n安装好之后, 就可以在当前html目录下执行http-server, 就启动一个http服务.\n启动后进行给出的端口就可以了.\n```bash\nhttp-server\n```\n\n## 注意\n开启服务之后, 浏览器会缓存当前端口的内容, 因此在更换浏览的内容或修改代码后, 必须要清空浏览器\n的缓存, 这样才能正常使用, 否则页面的内容不会出现变更.\n\n","source":"_posts/本地服务器运行HTML.md","raw":"---\ntitle: 本地服务器运行HTML\ndate: 2021-11-09 08:37:06\ntags: [HTML, Node]\ncover: https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/本地服务器运行HTML/cover-2021-11-18-11-03-07-71f9e96715716d8aebafcf10f15f2a40-1978b0.jpg\n---\n\n## 原因\n之前在编写JS代码的时候使用ES6语法对其他JS文件进行导入, 就需要对html文件中的script标签添加type=\"module\".\n但这样会导致程序内的路径从本地相对路径变为服务器的路径, 导致查找不到需要的文件. 因为是直接运行, 不想其他服务\n一样, 启动时都会使用一个本地的端口作为服务器, 因此需要一个在运行本地html文件时, 像运行在服务器上一样的模块.\n\n## 解决\n首先是我们需要安装一个 http-server 的服务.\n``` bash\n# 建议全局安装, 以便于以后的使用\nnpm install http-server -g\n```\n\n安装好之后, 就可以在当前html目录下执行http-server, 就启动一个http服务.\n启动后进行给出的端口就可以了.\n```bash\nhttp-server\n```\n\n## 注意\n开启服务之后, 浏览器会缓存当前端口的内容, 因此在更换浏览的内容或修改代码后, 必须要清空浏览器\n的缓存, 这样才能正常使用, 否则页面的内容不会出现变更.\n\n","slug":"本地服务器运行HTML","published":1,"updated":"2021-11-18T05:58:20.571Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckw4kuyji0007z8umcmu09pwp","content":"<h2 id=\"原因\">原因</h2>\r\n<p>之前在编写JS代码的时候使用ES6语法对其他JS文件进行导入, 就需要对html文件中的script标签添加type=\"module\". 但这样会导致程序内的路径从本地相对路径变为服务器的路径, 导致查找不到需要的文件. 因为是直接运行, 不想其他服务 一样, 启动时都会使用一个本地的端口作为服务器, 因此需要一个在运行本地html文件时, 像运行在服务器上一样的模块.</p>\r\n<h2 id=\"解决\">解决</h2>\r\n<p>首先是我们需要安装一个 http-server 的服务. <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 建议全局安装, 以便于以后的使用</span><br>npm install http-server -g<br></code></pre></td></tr></table></figure></p>\r\n<p>安装好之后, 就可以在当前html目录下执行http-server, 就启动一个http服务. 启动后进行给出的端口就可以了. <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">http-server<br></code></pre></td></tr></table></figure></p>\r\n<h2 id=\"注意\">注意</h2>\r\n<p>开启服务之后, 浏览器会缓存当前端口的内容, 因此在更换浏览的内容或修改代码后, 必须要清空浏览器 的缓存, 这样才能正常使用, 否则页面的内容不会出现变更.</p>\r\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"原因\">原因</h2>\r\n<p>之前在编写JS代码的时候使用ES6语法对其他JS文件进行导入, 就需要对html文件中的script标签添加type=\"module\". 但这样会导致程序内的路径从本地相对路径变为服务器的路径, 导致查找不到需要的文件. 因为是直接运行, 不想其他服务 一样, 启动时都会使用一个本地的端口作为服务器, 因此需要一个在运行本地html文件时, 像运行在服务器上一样的模块.</p>\r\n<h2 id=\"解决\">解决</h2>\r\n<p>首先是我们需要安装一个 http-server 的服务. <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 建议全局安装, 以便于以后的使用</span><br>npm install http-server -g<br></code></pre></td></tr></table></figure></p>\r\n<p>安装好之后, 就可以在当前html目录下执行http-server, 就启动一个http服务. 启动后进行给出的端口就可以了. <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">http-server<br></code></pre></td></tr></table></figure></p>\r\n<h2 id=\"注意\">注意</h2>\r\n<p>开启服务之后, 浏览器会缓存当前端口的内容, 因此在更换浏览的内容或修改代码后, 必须要清空浏览器 的缓存, 这样才能正常使用, 否则页面的内容不会出现变更.</p>\r\n"},{"title":"复数","date":"2021-11-06T03:31:47.000Z","cover":"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/复数/cover_-2021-11-18-11-05-40-f09d623785d6edb9ec7f29a4d4165bed-21a183.png","mathjax":true,"_content":"\n## 1. 复数的定义\n\n复数的通常形式为 $a + bi$ 其中 $a$ 和 $b$ 为实数, $i$ 是虚数单位, 它有着性质 $i^{2}=-1$。实数 $a$ 叫做复数的实部, 而实数 $b$ 叫做复数的虚部。实数可以被认为是虚部为零的复数；就是说实数 $a$ 等价于复数 $a+0i$。实部为零且虚部不为零的复数也被称作\"纯虚数\"；而实部不为零且虚部也不为零的复数也被称作\"非纯虚数\"或\"杂虚数\"。\n\n例如 $3+2i$ 是复数, 其中实部为 $3$ 虚部为 $2$。\n\n## 2. 等量关系\n复数中的虚数是无法比较大小的，即两个虚数只有相等和不等两种等量关系。\n\n两个复数是相等的，当且仅当它们的实部是相等的并且它们的虚部是相等的。就是说，设 $a$ , $b$ , $c$ , $d$ 为实数, 则 $a+bi=c+di$ 当且仅当 $a=c$ 并且 $b = d$。\n\n## 3. 在电工电子技术中\n在电子工程领域中, 虚部 $i$ 被 $j$ 代替, 所以复数写为 $a+jb$。\n\n在复平面上可以用一向量表示复数 $A$ ，如下图:\n\n$\\displaystyle a = |A|\\cos{\\varphi} \\qquad b = |A|\\sin{\\varphi}$\n\n$\\displaystyle |A| = \\sqrt{a^2+b^2} \\qquad \\tan{\\varphi} = \\frac{b}{a}$\n\n{%  image\n    url=\"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/复数/复数2_2_1-2021-11-18-11-05-40-6373a42693d3ed34f338961bb2c30a56-e147db.png\"\n%}\n\n## 4. 复数的形式\n\n* 代数式: $\\displaystyle A=a+jb$\n* 指数式: $\\displaystyle A=|A|e^{j\\varphi}$\n* 三角式: $\\displaystyle A=|A|\\cos{\\varphi} + j|A|\\sin{\\varphi}$\n* 极坐标式: $\\displaystyle A=|A|\\angle{\\varphi}$\n\n\n## 5. 运算\n设 $\\displaystyle A_{1} = a_{1}+jb_{1} \\quad A_2=a_2+jb_2$, 则\n\n* 加法: $\\displaystyle A_{1} + A_2 = (a_1 + a_2)+j(b_1 + b_2)$\n* 减法: $\\displaystyle A_{1} - A_2 = (a_1 - a_2)+j(b_1 - b_2)$\n* 乘法: $\\displaystyle A_1A_2 = |A_1||A_2|\\angle \\varphi$\n* 除法: $\\displaystyle\\frac{A_1}{A_2} = \\frac{|A_1|}{|A_2|}\\angle{\\varphi_1 - \\varphi_2}$\n  \n\n## 6. 旋转因子\n$\\displaystyle e^{j\\varphi} = 1\\angle\\varphi$ (模为 $1$ , 辐角为 $\\varphi$ 的复数)\n\n一个复数乘以 $e^{j\\varphi}$ 等于把其逆时针旋转 $\\varphi$ 角。\n\n$\\displaystyle e^{ \\pm j \\frac{\\pi}{2}} = \\pm j$\n\n$jA$ 相当于把 $A$ 逆时针旋转 $90$ 度, $j$称为旋转因子\n\n![](https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/复数/旋转因子-2021-11-18-11-05-40-c967ff81516beaa96c187f5d651fa1b3-dee371.png)","source":"_posts/复数.md","raw":"---\ntitle: 复数\ndate: 2021-11-06 11:31:47\ntags: [数学]\ncover: https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/复数/cover_-2021-11-18-11-05-40-f09d623785d6edb9ec7f29a4d4165bed-21a183.png\nmathjax: true\n---\n\n## 1. 复数的定义\n\n复数的通常形式为 $a + bi$ 其中 $a$ 和 $b$ 为实数, $i$ 是虚数单位, 它有着性质 $i^{2}=-1$。实数 $a$ 叫做复数的实部, 而实数 $b$ 叫做复数的虚部。实数可以被认为是虚部为零的复数；就是说实数 $a$ 等价于复数 $a+0i$。实部为零且虚部不为零的复数也被称作\"纯虚数\"；而实部不为零且虚部也不为零的复数也被称作\"非纯虚数\"或\"杂虚数\"。\n\n例如 $3+2i$ 是复数, 其中实部为 $3$ 虚部为 $2$。\n\n## 2. 等量关系\n复数中的虚数是无法比较大小的，即两个虚数只有相等和不等两种等量关系。\n\n两个复数是相等的，当且仅当它们的实部是相等的并且它们的虚部是相等的。就是说，设 $a$ , $b$ , $c$ , $d$ 为实数, 则 $a+bi=c+di$ 当且仅当 $a=c$ 并且 $b = d$。\n\n## 3. 在电工电子技术中\n在电子工程领域中, 虚部 $i$ 被 $j$ 代替, 所以复数写为 $a+jb$。\n\n在复平面上可以用一向量表示复数 $A$ ，如下图:\n\n$\\displaystyle a = |A|\\cos{\\varphi} \\qquad b = |A|\\sin{\\varphi}$\n\n$\\displaystyle |A| = \\sqrt{a^2+b^2} \\qquad \\tan{\\varphi} = \\frac{b}{a}$\n\n{%  image\n    url=\"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/复数/复数2_2_1-2021-11-18-11-05-40-6373a42693d3ed34f338961bb2c30a56-e147db.png\"\n%}\n\n## 4. 复数的形式\n\n* 代数式: $\\displaystyle A=a+jb$\n* 指数式: $\\displaystyle A=|A|e^{j\\varphi}$\n* 三角式: $\\displaystyle A=|A|\\cos{\\varphi} + j|A|\\sin{\\varphi}$\n* 极坐标式: $\\displaystyle A=|A|\\angle{\\varphi}$\n\n\n## 5. 运算\n设 $\\displaystyle A_{1} = a_{1}+jb_{1} \\quad A_2=a_2+jb_2$, 则\n\n* 加法: $\\displaystyle A_{1} + A_2 = (a_1 + a_2)+j(b_1 + b_2)$\n* 减法: $\\displaystyle A_{1} - A_2 = (a_1 - a_2)+j(b_1 - b_2)$\n* 乘法: $\\displaystyle A_1A_2 = |A_1||A_2|\\angle \\varphi$\n* 除法: $\\displaystyle\\frac{A_1}{A_2} = \\frac{|A_1|}{|A_2|}\\angle{\\varphi_1 - \\varphi_2}$\n  \n\n## 6. 旋转因子\n$\\displaystyle e^{j\\varphi} = 1\\angle\\varphi$ (模为 $1$ , 辐角为 $\\varphi$ 的复数)\n\n一个复数乘以 $e^{j\\varphi}$ 等于把其逆时针旋转 $\\varphi$ 角。\n\n$\\displaystyle e^{ \\pm j \\frac{\\pi}{2}} = \\pm j$\n\n$jA$ 相当于把 $A$ 逆时针旋转 $90$ 度, $j$称为旋转因子\n\n![](https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/复数/旋转因子-2021-11-18-11-05-40-c967ff81516beaa96c187f5d651fa1b3-dee371.png)","slug":"复数","published":1,"updated":"2021-11-18T06:02:05.239Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckw4kuyjw000lz8um5tq22atn","content":"<h2 id=\"复数的定义\">1. 复数的定义</h2>\r\n<p>复数的通常形式为 <span class=\"math inline\">\\(a + bi\\)</span> 其中 <span class=\"math inline\">\\(a\\)</span> 和 <span class=\"math inline\">\\(b\\)</span> 为实数, <span class=\"math inline\">\\(i\\)</span> 是虚数单位, 它有着性质 <span class=\"math inline\">\\(i^{2}=-1\\)</span>。实数 <span class=\"math inline\">\\(a\\)</span> 叫做复数的实部, 而实数 <span class=\"math inline\">\\(b\\)</span> 叫做复数的虚部。实数可以被认为是虚部为零的复数；就是说实数 <span class=\"math inline\">\\(a\\)</span> 等价于复数 <span class=\"math inline\">\\(a+0i\\)</span>。实部为零且虚部不为零的复数也被称作\"纯虚数\"；而实部不为零且虚部也不为零的复数也被称作\"非纯虚数\"或\"杂虚数\"。</p>\r\n<p>例如 <span class=\"math inline\">\\(3+2i\\)</span> 是复数, 其中实部为 <span class=\"math inline\">\\(3\\)</span> 虚部为 <span class=\"math inline\">\\(2\\)</span>。</p>\r\n<h2 id=\"等量关系\">2. 等量关系</h2>\r\n<p>复数中的虚数是无法比较大小的，即两个虚数只有相等和不等两种等量关系。</p>\r\n<p>两个复数是相等的，当且仅当它们的实部是相等的并且它们的虚部是相等的。就是说，设 <span class=\"math inline\">\\(a\\)</span> , <span class=\"math inline\">\\(b\\)</span> , <span class=\"math inline\">\\(c\\)</span> , <span class=\"math inline\">\\(d\\)</span> 为实数, 则 <span class=\"math inline\">\\(a+bi=c+di\\)</span> 当且仅当 <span class=\"math inline\">\\(a=c\\)</span> 并且 <span class=\"math inline\">\\(b = d\\)</span>。</p>\r\n<h2 id=\"在电工电子技术中\">3. 在电工电子技术中</h2>\r\n<p>在电子工程领域中, 虚部 <span class=\"math inline\">\\(i\\)</span> 被 <span class=\"math inline\">\\(j\\)</span> 代替, 所以复数写为 <span class=\"math inline\">\\(a+jb\\)</span>。</p>\r\n<p>在复平面上可以用一向量表示复数 <span class=\"math inline\">\\(A\\)</span> ，如下图:</p>\r\n<p><span class=\"math inline\">\\(\\displaystyle a = |A|\\cos{\\varphi} \\qquad b = |A|\\sin{\\varphi}\\)</span></p>\r\n<p><span class=\"math inline\">\\(\\displaystyle |A| = \\sqrt{a^2+b^2} \\qquad \\tan{\\varphi} = \\frac{b}{a}\\)</span></p>\r\n\n    <figure class=\"figure-image\">\n      <img src=\"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/复数/复数2_2_1-2021-11-18-11-05-40-6373a42693d3ed34f338961bb2c30a56-e147db.png\" alt=\"\" loading=\"lazy\" />\n      <figcaption></figcaption>\n    </figure>\n  \r\n<h2 id=\"复数的形式\">4. 复数的形式</h2>\r\n<ul>\r\n<li>代数式: <span class=\"math inline\">\\(\\displaystyle A=a+jb\\)</span></li>\r\n<li>指数式: <span class=\"math inline\">\\(\\displaystyle A=|A|e^{j\\varphi}\\)</span></li>\r\n<li>三角式: <span class=\"math inline\">\\(\\displaystyle A=|A|\\cos{\\varphi} + j|A|\\sin{\\varphi}\\)</span></li>\r\n<li>极坐标式: <span class=\"math inline\">\\(\\displaystyle A=|A|\\angle{\\varphi}\\)</span></li>\r\n</ul>\r\n<h2 id=\"运算\">5. 运算</h2>\r\n<p>设 <span class=\"math inline\">\\(\\displaystyle A_{1} = a_{1}+jb_{1} \\quad A_2=a_2+jb_2\\)</span>, 则</p>\r\n<ul>\r\n<li>加法: <span class=\"math inline\">\\(\\displaystyle A_{1} + A_2 = (a_1 + a_2)+j(b_1 + b_2)\\)</span></li>\r\n<li>减法: <span class=\"math inline\">\\(\\displaystyle A_{1} - A_2 = (a_1 - a_2)+j(b_1 - b_2)\\)</span></li>\r\n<li>乘法: <span class=\"math inline\">\\(\\displaystyle A_1A_2 = |A_1||A_2|\\angle \\varphi\\)</span></li>\r\n<li>除法: <span class=\"math inline\">\\(\\displaystyle\\frac{A_1}{A_2} = \\frac{|A_1|}{|A_2|}\\angle{\\varphi_1 - \\varphi_2}\\)</span></li>\r\n</ul>\r\n<h2 id=\"旋转因子\">6. 旋转因子</h2>\r\n<p><span class=\"math inline\">\\(\\displaystyle e^{j\\varphi} = 1\\angle\\varphi\\)</span> (模为 <span class=\"math inline\">\\(1\\)</span> , 辐角为 <span class=\"math inline\">\\(\\varphi\\)</span> 的复数)</p>\r\n<p>一个复数乘以 <span class=\"math inline\">\\(e^{j\\varphi}\\)</span> 等于把其逆时针旋转 <span class=\"math inline\">\\(\\varphi\\)</span> 角。</p>\r\n<p><span class=\"math inline\">\\(\\displaystyle e^{ \\pm j \\frac{\\pi}{2}} = \\pm j\\)</span></p>\r\n<p><span class=\"math inline\">\\(jA\\)</span> 相当于把 <span class=\"math inline\">\\(A\\)</span> 逆时针旋转 <span class=\"math inline\">\\(90\\)</span> 度, <span class=\"math inline\">\\(j\\)</span>称为旋转因子</p>\r\n<p><img src=\"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/复数/旋转因子-2021-11-18-11-05-40-c967ff81516beaa96c187f5d651fa1b3-dee371.png\" /></p>\r\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"复数的定义\">1. 复数的定义</h2>\r\n<p>复数的通常形式为 <span class=\"math inline\">\\(a + bi\\)</span> 其中 <span class=\"math inline\">\\(a\\)</span> 和 <span class=\"math inline\">\\(b\\)</span> 为实数, <span class=\"math inline\">\\(i\\)</span> 是虚数单位, 它有着性质 <span class=\"math inline\">\\(i^{2}=-1\\)</span>。实数 <span class=\"math inline\">\\(a\\)</span> 叫做复数的实部, 而实数 <span class=\"math inline\">\\(b\\)</span> 叫做复数的虚部。实数可以被认为是虚部为零的复数；就是说实数 <span class=\"math inline\">\\(a\\)</span> 等价于复数 <span class=\"math inline\">\\(a+0i\\)</span>。实部为零且虚部不为零的复数也被称作\"纯虚数\"；而实部不为零且虚部也不为零的复数也被称作\"非纯虚数\"或\"杂虚数\"。</p>\r\n<p>例如 <span class=\"math inline\">\\(3+2i\\)</span> 是复数, 其中实部为 <span class=\"math inline\">\\(3\\)</span> 虚部为 <span class=\"math inline\">\\(2\\)</span>。</p>\r\n<h2 id=\"等量关系\">2. 等量关系</h2>\r\n<p>复数中的虚数是无法比较大小的，即两个虚数只有相等和不等两种等量关系。</p>\r\n<p>两个复数是相等的，当且仅当它们的实部是相等的并且它们的虚部是相等的。就是说，设 <span class=\"math inline\">\\(a\\)</span> , <span class=\"math inline\">\\(b\\)</span> , <span class=\"math inline\">\\(c\\)</span> , <span class=\"math inline\">\\(d\\)</span> 为实数, 则 <span class=\"math inline\">\\(a+bi=c+di\\)</span> 当且仅当 <span class=\"math inline\">\\(a=c\\)</span> 并且 <span class=\"math inline\">\\(b = d\\)</span>。</p>\r\n<h2 id=\"在电工电子技术中\">3. 在电工电子技术中</h2>\r\n<p>在电子工程领域中, 虚部 <span class=\"math inline\">\\(i\\)</span> 被 <span class=\"math inline\">\\(j\\)</span> 代替, 所以复数写为 <span class=\"math inline\">\\(a+jb\\)</span>。</p>\r\n<p>在复平面上可以用一向量表示复数 <span class=\"math inline\">\\(A\\)</span> ，如下图:</p>\r\n<p><span class=\"math inline\">\\(\\displaystyle a = |A|\\cos{\\varphi} \\qquad b = |A|\\sin{\\varphi}\\)</span></p>\r\n<p><span class=\"math inline\">\\(\\displaystyle |A| = \\sqrt{a^2+b^2} \\qquad \\tan{\\varphi} = \\frac{b}{a}\\)</span></p>\r\n\n    <figure class=\"figure-image\">\n      <img src=\"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/复数/复数2_2_1-2021-11-18-11-05-40-6373a42693d3ed34f338961bb2c30a56-e147db.png\" alt=\"\" loading=\"lazy\" />\n      <figcaption></figcaption>\n    </figure>\n  \r\n<h2 id=\"复数的形式\">4. 复数的形式</h2>\r\n<ul>\r\n<li>代数式: <span class=\"math inline\">\\(\\displaystyle A=a+jb\\)</span></li>\r\n<li>指数式: <span class=\"math inline\">\\(\\displaystyle A=|A|e^{j\\varphi}\\)</span></li>\r\n<li>三角式: <span class=\"math inline\">\\(\\displaystyle A=|A|\\cos{\\varphi} + j|A|\\sin{\\varphi}\\)</span></li>\r\n<li>极坐标式: <span class=\"math inline\">\\(\\displaystyle A=|A|\\angle{\\varphi}\\)</span></li>\r\n</ul>\r\n<h2 id=\"运算\">5. 运算</h2>\r\n<p>设 <span class=\"math inline\">\\(\\displaystyle A_{1} = a_{1}+jb_{1} \\quad A_2=a_2+jb_2\\)</span>, 则</p>\r\n<ul>\r\n<li>加法: <span class=\"math inline\">\\(\\displaystyle A_{1} + A_2 = (a_1 + a_2)+j(b_1 + b_2)\\)</span></li>\r\n<li>减法: <span class=\"math inline\">\\(\\displaystyle A_{1} - A_2 = (a_1 - a_2)+j(b_1 - b_2)\\)</span></li>\r\n<li>乘法: <span class=\"math inline\">\\(\\displaystyle A_1A_2 = |A_1||A_2|\\angle \\varphi\\)</span></li>\r\n<li>除法: <span class=\"math inline\">\\(\\displaystyle\\frac{A_1}{A_2} = \\frac{|A_1|}{|A_2|}\\angle{\\varphi_1 - \\varphi_2}\\)</span></li>\r\n</ul>\r\n<h2 id=\"旋转因子\">6. 旋转因子</h2>\r\n<p><span class=\"math inline\">\\(\\displaystyle e^{j\\varphi} = 1\\angle\\varphi\\)</span> (模为 <span class=\"math inline\">\\(1\\)</span> , 辐角为 <span class=\"math inline\">\\(\\varphi\\)</span> 的复数)</p>\r\n<p>一个复数乘以 <span class=\"math inline\">\\(e^{j\\varphi}\\)</span> 等于把其逆时针旋转 <span class=\"math inline\">\\(\\varphi\\)</span> 角。</p>\r\n<p><span class=\"math inline\">\\(\\displaystyle e^{ \\pm j \\frac{\\pi}{2}} = \\pm j\\)</span></p>\r\n<p><span class=\"math inline\">\\(jA\\)</span> 相当于把 <span class=\"math inline\">\\(A\\)</span> 逆时针旋转 <span class=\"math inline\">\\(90\\)</span> 度, <span class=\"math inline\">\\(j\\)</span>称为旋转因子</p>\r\n<p><img src=\"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/复数/旋转因子-2021-11-18-11-05-40-c967ff81516beaa96c187f5d651fa1b3-dee371.png\" /></p>\r\n"},{"title":"第一篇博客","date":"2020-07-11T01:53:27.000Z","cover":"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/第一篇博客/cover-2021-11-18-11-05-32-7ac576854cd3cd35aab9174bdfd212b0-8b587f.png","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\n","source":"_posts/第一篇博客.md","raw":"---\ntitle: 第一篇博客\ndate: 2020-07-11 09:53:27\ncover: https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/第一篇博客/cover-2021-11-18-11-05-32-7ac576854cd3cd35aab9174bdfd212b0-8b587f.png\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\n","slug":"第一篇博客","published":1,"updated":"2021-11-18T05:58:20.578Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckw4kuyjx000mz8um5nagapbf","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\r\n<h2 id=\"quick-start\">Quick Start</h2>\r\n<h3 id=\"create-a-new-post\">Create a new post</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\r\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\r\n<h3 id=\"run-server\">Run server</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\r\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\r\n<h3 id=\"generate-static-files\">Generate static files</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\r\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\r\n<h3 id=\"deploy-to-remote-sites\">Deploy to remote sites</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\r\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\r\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\r\n<h2 id=\"quick-start\">Quick Start</h2>\r\n<h3 id=\"create-a-new-post\">Create a new post</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\r\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\r\n<h3 id=\"run-server\">Run server</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\r\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\r\n<h3 id=\"generate-static-files\">Generate static files</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\r\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\r\n<h3 id=\"deploy-to-remote-sites\">Deploy to remote sites</h3>\r\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\r\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\r\n"},{"title":"Markdown LaTex","date":"2021-11-06T04:49:30.000Z","cover":"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/Markdown-LaTex/cover-2021-11-18-11-03-03-976a1062189e17c386443ffab043f457-d887cc.png","mathjax":true,"_content":"\n## 公式排版\n* 行内公式: 使用 `$ $` 包裹公式\n  * 例如 `$y=x^2+k$` $\\to$ $y=x^2+k$\n* 独立公式: 使用 `$$  $$` 包裹公式\n  * 例如: `$$ \\Delta = \\frac{-b\\pm\\sqrt{b^2-4ac}}{2a} $$`\n  $$ \\Delta = \\frac{-b\\pm\\sqrt{b^2-4ac}}{2a} $$\n\n## LaTex 基础语法\n\n###  上下标\n\n| LaTex 语法 | 效果 |\n| :---: | :---: |\n| `x_{1}` | $x_{1}$ |\n| `x^{a}` | $x^{a}$ |\n| `x^{a}_{1}` | $x^{a}_{1}$ |\n\n### 根式和分式\n\n| LaTex 语法 | 效果 |\n| :---: | :---: |\n| `\\displaystyle` | 修复大小(建议每个公式开头添加) |\n| `\\frac{a}{b}` | $\\frac{a}{b}$ |\n| `\\displaystyle\\frac{a}{b}` | $\\displaystyle\\frac{a}{b}$ |\n| `\\sqrt{a}` | $\\sqrt{a}$ |\n| `\\sqrt[3]{a}` | $\\sqrt[3]{a}$ |\n| `\\surd[a^2+b^2]` | $\\surd[a^2+b^2]$ |\n\n### 常见运算符\n\n|       |       |       |       |       |       | \n| :---: | :---: | :---: | :---: | :---: | :---: |\n| `\\le` | $\\le$ | `\\ge` | $\\ge$ | `\\equiv` | $\\equiv$ |\n| `\\pm` | $\\pm$ | `\\cdot` | $\\cdot$ | `\\div` | $\\div$ |\n| `\\cup` | $\\cup$ | `\\cap` | $\\cap$ | `\\angle` | $\\angle$ |\n| `\\lor` | $\\lor$ | `\\land` | $\\land$ | | |\n| `\\forall` | $\\forall$ | `\\exists` | $\\exists$ | | |\n| `\\gets` | $\\gets$ | `\\to` | $\\to$ | `\\leftrightarrow` | $\\leftrightarrow$ |\n| `\\uparrow` | $\\uparrow$ | `\\downarrow` | $\\downarrow$ | `\\updownarrow` | $\\updownarrow$ |\n| `\\lfloor` | $\\lfloor$ | `\\rfloor` | $\\rfloor$ | | |\n| `\\lceil` | $\\lceil$ | `\\rceil` | $\\rceil$ | | |\n\n### 一些特殊运算\n\n| LaTex 语法 | 效果 |\n| :---: | :---: |\n| `\\overline{m+n}` | $\\overline{m+n}$ |\n| `\\underline{m+n}` | $\\underline{m+n}$ |\n| `\\displaystyle\\sum_{i=0}^{n}i` | $\\displaystyle\\sum_{i=0}^{n}i$ |\n| `\\displaystyle\\int_{0}^{\\frac{\\pi}{2}}` | $\\displaystyle\\int_{0}^{\\frac{\\pi}{2}}$ |\n| `\\displaystyle\\prod_{a}^{b}` | $\\displaystyle\\prod_{a}^{b}$ |\n| `\\displaystyle\\lim_{x \\to \\infty}` | $\\displaystyle\\lim_{x\\to\\infty}$ |\n\n### 附表\n\n![](https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/Markdown-LaTex/希腊字母-2021-11-18-12-32-49-73005227c712bd276e3c34bc4f8ef0d9-4bcaa6.png)\n\n![](https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/Markdown-LaTex/AMS二元运算符-2021-11-18-12-32-49-6e3b459593953db5eb8c236fc88e8fca-c1f1c4.png)\n","source":"_posts/markdown_latex.md","raw":"---\ntitle: Markdown LaTex\ndate: 2021-11-06 12:49:30\ntags: [数学, Markdown]\ncover: https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/Markdown-LaTex/cover-2021-11-18-11-03-03-976a1062189e17c386443ffab043f457-d887cc.png\nmathjax: true\n---\n\n## 公式排版\n* 行内公式: 使用 `$ $` 包裹公式\n  * 例如 `$y=x^2+k$` $\\to$ $y=x^2+k$\n* 独立公式: 使用 `$$  $$` 包裹公式\n  * 例如: `$$ \\Delta = \\frac{-b\\pm\\sqrt{b^2-4ac}}{2a} $$`\n  $$ \\Delta = \\frac{-b\\pm\\sqrt{b^2-4ac}}{2a} $$\n\n## LaTex 基础语法\n\n###  上下标\n\n| LaTex 语法 | 效果 |\n| :---: | :---: |\n| `x_{1}` | $x_{1}$ |\n| `x^{a}` | $x^{a}$ |\n| `x^{a}_{1}` | $x^{a}_{1}$ |\n\n### 根式和分式\n\n| LaTex 语法 | 效果 |\n| :---: | :---: |\n| `\\displaystyle` | 修复大小(建议每个公式开头添加) |\n| `\\frac{a}{b}` | $\\frac{a}{b}$ |\n| `\\displaystyle\\frac{a}{b}` | $\\displaystyle\\frac{a}{b}$ |\n| `\\sqrt{a}` | $\\sqrt{a}$ |\n| `\\sqrt[3]{a}` | $\\sqrt[3]{a}$ |\n| `\\surd[a^2+b^2]` | $\\surd[a^2+b^2]$ |\n\n### 常见运算符\n\n|       |       |       |       |       |       | \n| :---: | :---: | :---: | :---: | :---: | :---: |\n| `\\le` | $\\le$ | `\\ge` | $\\ge$ | `\\equiv` | $\\equiv$ |\n| `\\pm` | $\\pm$ | `\\cdot` | $\\cdot$ | `\\div` | $\\div$ |\n| `\\cup` | $\\cup$ | `\\cap` | $\\cap$ | `\\angle` | $\\angle$ |\n| `\\lor` | $\\lor$ | `\\land` | $\\land$ | | |\n| `\\forall` | $\\forall$ | `\\exists` | $\\exists$ | | |\n| `\\gets` | $\\gets$ | `\\to` | $\\to$ | `\\leftrightarrow` | $\\leftrightarrow$ |\n| `\\uparrow` | $\\uparrow$ | `\\downarrow` | $\\downarrow$ | `\\updownarrow` | $\\updownarrow$ |\n| `\\lfloor` | $\\lfloor$ | `\\rfloor` | $\\rfloor$ | | |\n| `\\lceil` | $\\lceil$ | `\\rceil` | $\\rceil$ | | |\n\n### 一些特殊运算\n\n| LaTex 语法 | 效果 |\n| :---: | :---: |\n| `\\overline{m+n}` | $\\overline{m+n}$ |\n| `\\underline{m+n}` | $\\underline{m+n}$ |\n| `\\displaystyle\\sum_{i=0}^{n}i` | $\\displaystyle\\sum_{i=0}^{n}i$ |\n| `\\displaystyle\\int_{0}^{\\frac{\\pi}{2}}` | $\\displaystyle\\int_{0}^{\\frac{\\pi}{2}}$ |\n| `\\displaystyle\\prod_{a}^{b}` | $\\displaystyle\\prod_{a}^{b}$ |\n| `\\displaystyle\\lim_{x \\to \\infty}` | $\\displaystyle\\lim_{x\\to\\infty}$ |\n\n### 附表\n\n![](https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/Markdown-LaTex/希腊字母-2021-11-18-12-32-49-73005227c712bd276e3c34bc4f8ef0d9-4bcaa6.png)\n\n![](https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/Markdown-LaTex/AMS二元运算符-2021-11-18-12-32-49-6e3b459593953db5eb8c236fc88e8fca-c1f1c4.png)\n","slug":"markdown_latex","published":1,"updated":"2023-10-27T10:12:59.646Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clo8gj03e0000t8um6fli2fss","content":"<h2 id=\"公式排版\">公式排版</h2>\r\n<ul>\r\n<li>行内公式: 使用 <code>$ $</code> 包裹公式\r\n<ul>\r\n<li>例如 <code>$y=x^2+k$</code> <span class=\"math inline\">\\(\\to\\)</span>\r\n<span class=\"math inline\">\\(y=x^2+k\\)</span></li>\r\n</ul></li>\r\n<li>独立公式: 使用 <code>$$  $$</code> 包裹公式\r\n<ul>\r\n<li>例如: <code>$$ \\Delta = \\frac&#123;-b\\pm\\sqrt&#123;b^2-4ac&#125;&#125;&#123;2a&#125; $$</code>\r\n<span class=\"math display\">\\[ \\Delta = \\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}\r\n\\]</span></li>\r\n</ul></li>\r\n</ul>\r\n<h2 id=\"latex-基础语法\">LaTex 基础语法</h2>\r\n<h3 id=\"上下标\">上下标</h3>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">LaTex 语法</th>\r\n<th style=\"text-align: center;\">效果</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>x_&#123;1&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(x_{1}\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>x^&#123;a&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(x^{a}\\)</span></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>x^&#123;a&#125;_&#123;1&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(x^{a}_{1}\\)</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"根式和分式\">根式和分式</h3>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">LaTex 语法</th>\r\n<th style=\"text-align: center;\">效果</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>\\displaystyle</code></td>\r\n<td style=\"text-align: center;\">修复大小(建议每个公式开头添加)</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>\\frac&#123;a&#125;&#123;b&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\frac{a}{b}\\)</span></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td\r\nstyle=\"text-align: center;\"><code>\\displaystyle\\frac&#123;a&#125;&#123;b&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\displaystyle\\frac{a}{b}\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>\\sqrt&#123;a&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\sqrt{a}\\)</span></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>\\sqrt[3]&#123;a&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\sqrt[3]{a}\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>\\surd[a^2+b^2]</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\surd[a^2+b^2]\\)</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"常见运算符\">常见运算符</h3>\r\n<table style=\"width:100%;\">\r\n<colgroup>\r\n<col style=\"width: 16%\" />\r\n<col style=\"width: 16%\" />\r\n<col style=\"width: 16%\" />\r\n<col style=\"width: 16%\" />\r\n<col style=\"width: 16%\" />\r\n<col style=\"width: 16%\" />\r\n</colgroup>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>\\le</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\le\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\ge</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\ge\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\equiv</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\equiv\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>\\pm</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\pm\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\cdot</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\cdot\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\div</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\div\\)</span></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>\\cup</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\cup\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\cap</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\cap\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\angle</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\angle\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>\\lor</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\lor\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\land</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\land\\)</span></td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>\\forall</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\forall\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\exists</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\exists\\)</span></td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>\\gets</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\gets\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\to</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\to\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\leftrightarrow</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\leftrightarrow\\)</span></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>\\uparrow</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\uparrow\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\downarrow</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\downarrow\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\updownarrow</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\updownarrow\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>\\lfloor</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\lfloor\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\rfloor</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\rfloor\\)</span></td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>\\lceil</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\lceil\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\rceil</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\rceil\\)</span></td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"一些特殊运算\">一些特殊运算</h3>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 50%\" />\r\n<col style=\"width: 50%\" />\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">LaTex 语法</th>\r\n<th style=\"text-align: center;\">效果</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>\\overline&#123;m+n&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\overline{m+n}\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>\\underline&#123;m+n&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\underline{m+n}\\)</span></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td\r\nstyle=\"text-align: center;\"><code>\\displaystyle\\sum_&#123;i=0&#125;^&#123;n&#125;i</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\displaystyle\\sum_{i=0}^{n}i\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td\r\nstyle=\"text-align: center;\"><code>\\displaystyle\\int_&#123;0&#125;^&#123;\\frac&#123;\\pi&#125;&#123;2&#125;&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\displaystyle\\int_{0}^{\\frac{\\pi}{2}}\\)</span></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td\r\nstyle=\"text-align: center;\"><code>\\displaystyle\\prod_&#123;a&#125;^&#123;b&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\displaystyle\\prod_{a}^{b}\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td\r\nstyle=\"text-align: center;\"><code>\\displaystyle\\lim_&#123;x \\to \\infty&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\displaystyle\\lim_{x\\to\\infty}\\)</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"附表\">附表</h3>\r\n<p><img\r\nsrc=\"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/Markdown-LaTex/希腊字母-2021-11-18-12-32-49-73005227c712bd276e3c34bc4f8ef0d9-4bcaa6.png\" /></p>\r\n<p><img\r\nsrc=\"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/Markdown-LaTex/AMS二元运算符-2021-11-18-12-32-49-6e3b459593953db5eb8c236fc88e8fca-c1f1c4.png\" /></p>\r\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"公式排版\">公式排版</h2>\r\n<ul>\r\n<li>行内公式: 使用 <code>$ $</code> 包裹公式\r\n<ul>\r\n<li>例如 <code>$y=x^2+k$</code> <span class=\"math inline\">\\(\\to\\)</span>\r\n<span class=\"math inline\">\\(y=x^2+k\\)</span></li>\r\n</ul></li>\r\n<li>独立公式: 使用 <code>$$  $$</code> 包裹公式\r\n<ul>\r\n<li>例如: <code>$$ \\Delta = \\frac&#123;-b\\pm\\sqrt&#123;b^2-4ac&#125;&#125;&#123;2a&#125; $$</code>\r\n<span class=\"math display\">\\[ \\Delta = \\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}\r\n\\]</span></li>\r\n</ul></li>\r\n</ul>\r\n<h2 id=\"latex-基础语法\">LaTex 基础语法</h2>\r\n<h3 id=\"上下标\">上下标</h3>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">LaTex 语法</th>\r\n<th style=\"text-align: center;\">效果</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>x_&#123;1&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(x_{1}\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>x^&#123;a&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(x^{a}\\)</span></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>x^&#123;a&#125;_&#123;1&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(x^{a}_{1}\\)</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"根式和分式\">根式和分式</h3>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">LaTex 语法</th>\r\n<th style=\"text-align: center;\">效果</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>\\displaystyle</code></td>\r\n<td style=\"text-align: center;\">修复大小(建议每个公式开头添加)</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>\\frac&#123;a&#125;&#123;b&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\frac{a}{b}\\)</span></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td\r\nstyle=\"text-align: center;\"><code>\\displaystyle\\frac&#123;a&#125;&#123;b&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\displaystyle\\frac{a}{b}\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>\\sqrt&#123;a&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\sqrt{a}\\)</span></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>\\sqrt[3]&#123;a&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\sqrt[3]{a}\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>\\surd[a^2+b^2]</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\surd[a^2+b^2]\\)</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"常见运算符\">常见运算符</h3>\r\n<table style=\"width:100%;\">\r\n<colgroup>\r\n<col style=\"width: 16%\" />\r\n<col style=\"width: 16%\" />\r\n<col style=\"width: 16%\" />\r\n<col style=\"width: 16%\" />\r\n<col style=\"width: 16%\" />\r\n<col style=\"width: 16%\" />\r\n</colgroup>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>\\le</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\le\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\ge</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\ge\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\equiv</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\equiv\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>\\pm</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\pm\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\cdot</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\cdot\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\div</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\div\\)</span></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>\\cup</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\cup\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\cap</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\cap\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\angle</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\angle\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>\\lor</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\lor\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\land</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\land\\)</span></td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>\\forall</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\forall\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\exists</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\exists\\)</span></td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>\\gets</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\gets\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\to</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\to\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\leftrightarrow</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\leftrightarrow\\)</span></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>\\uparrow</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\uparrow\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\downarrow</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\downarrow\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\updownarrow</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\updownarrow\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>\\lfloor</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\lfloor\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\rfloor</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\rfloor\\)</span></td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>\\lceil</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\lceil\\)</span></td>\r\n<td style=\"text-align: center;\"><code>\\rceil</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\rceil\\)</span></td>\r\n<td style=\"text-align: center;\"></td>\r\n<td style=\"text-align: center;\"></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"一些特殊运算\">一些特殊运算</h3>\r\n<table>\r\n<colgroup>\r\n<col style=\"width: 50%\" />\r\n<col style=\"width: 50%\" />\r\n</colgroup>\r\n<thead>\r\n<tr class=\"header\">\r\n<th style=\"text-align: center;\">LaTex 语法</th>\r\n<th style=\"text-align: center;\">效果</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td style=\"text-align: center;\"><code>\\overline&#123;m+n&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\overline{m+n}\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td style=\"text-align: center;\"><code>\\underline&#123;m+n&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\underline{m+n}\\)</span></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td\r\nstyle=\"text-align: center;\"><code>\\displaystyle\\sum_&#123;i=0&#125;^&#123;n&#125;i</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\displaystyle\\sum_{i=0}^{n}i\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td\r\nstyle=\"text-align: center;\"><code>\\displaystyle\\int_&#123;0&#125;^&#123;\\frac&#123;\\pi&#125;&#123;2&#125;&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\displaystyle\\int_{0}^{\\frac{\\pi}{2}}\\)</span></td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td\r\nstyle=\"text-align: center;\"><code>\\displaystyle\\prod_&#123;a&#125;^&#123;b&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\displaystyle\\prod_{a}^{b}\\)</span></td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td\r\nstyle=\"text-align: center;\"><code>\\displaystyle\\lim_&#123;x \\to \\infty&#125;</code></td>\r\n<td style=\"text-align: center;\"><span\r\nclass=\"math inline\">\\(\\displaystyle\\lim_{x\\to\\infty}\\)</span></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h3 id=\"附表\">附表</h3>\r\n<p><img\r\nsrc=\"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/Markdown-LaTex/希腊字母-2021-11-18-12-32-49-73005227c712bd276e3c34bc4f8ef0d9-4bcaa6.png\" /></p>\r\n<p><img\r\nsrc=\"https://cdn.jsdelivr.net/gh/Kiyuiro/Images@master/Markdown-LaTex/AMS二元运算符-2021-11-18-12-32-49-6e3b459593953db5eb8c236fc88e8fca-c1f1c4.png\" /></p>\r\n"},{"title":"scoop 安装和使用","date":"2023-10-22T07:01:00.000Z","cover":"https://api.onedrive.com/v1.0/shares/s!Andl82vyabVsiNEok0hAmdZaZYOC1w/root/content","_content":"\n搜索包含 `name` 的程序\n```\nscoop search [name]\n```\n\n安装 `name` 程序, 名称必须与仓库中的完全一致\n```\nscoop search [name]\n```\n\n查看添加的仓库源\n```\nscoop bucket list\n```\n\n添加新的仓库源地址\n```\nscoop bucket add [soure name]\n```","source":"_posts/scoop use.md","raw":"---\ntitle: scoop 安装和使用\ndate: 2023-10-22 15:01:00\ntags: [测试]\ncover: https://api.onedrive.com/v1.0/shares/s!Andl82vyabVsiNEok0hAmdZaZYOC1w/root/content\n---\n\n搜索包含 `name` 的程序\n```\nscoop search [name]\n```\n\n安装 `name` 程序, 名称必须与仓库中的完全一致\n```\nscoop search [name]\n```\n\n查看添加的仓库源\n```\nscoop bucket list\n```\n\n添加新的仓库源地址\n```\nscoop bucket add [soure name]\n```","slug":"scoop use","published":1,"updated":"2023-10-27T10:12:59.647Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clo8gj03g0001t8um3fbjdsh4","content":"<p>搜索包含 <code>name</code> 的程序 <figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">scoop <span class=\"hljs-keyword\">search</span> [<span class=\"hljs-type\">name</span>]<br></code></pre></td></tr></table></figure></p>\r\n<p>安装 <code>name</code> 程序, 名称必须与仓库中的完全一致\r\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">scoop <span class=\"hljs-keyword\">search</span> [<span class=\"hljs-type\">name</span>]<br></code></pre></td></tr></table></figure></p>\r\n<p>查看添加的仓库源 <figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-keyword\">scoop </span><span class=\"hljs-keyword\">bucket </span>list<br></code></pre></td></tr></table></figure></p>\r\n<p>添加新的仓库源地址 <figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-keyword\">scoop </span><span class=\"hljs-keyword\">bucket </span><span class=\"hljs-keyword\">add </span>[soure name]<br></code></pre></td></tr></table></figure></p>\r\n","site":{"data":{}},"excerpt":"","more":"<p>搜索包含 <code>name</code> 的程序 <figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">scoop <span class=\"hljs-keyword\">search</span> [<span class=\"hljs-type\">name</span>]<br></code></pre></td></tr></table></figure></p>\r\n<p>安装 <code>name</code> 程序, 名称必须与仓库中的完全一致\r\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">scoop <span class=\"hljs-keyword\">search</span> [<span class=\"hljs-type\">name</span>]<br></code></pre></td></tr></table></figure></p>\r\n<p>查看添加的仓库源 <figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-keyword\">scoop </span><span class=\"hljs-keyword\">bucket </span>list<br></code></pre></td></tr></table></figure></p>\r\n<p>添加新的仓库源地址 <figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-keyword\">scoop </span><span class=\"hljs-keyword\">bucket </span><span class=\"hljs-keyword\">add </span>[soure name]<br></code></pre></td></tr></table></figure></p>\r\n"},{"title":"Vite/nvm/nrm 使用","date":"2023-10-13T03:54:00.000Z","cover":"https://api.onedrive.com/v1.0/shares/s!Andl82vyabVsiNEpqZeRG-PWr2hdIA/root/content","_content":"\n## Vite\n\n### vite init\n\n---\n\n安装 `vite` 的最新版本\n\n```powershell\nnpm init vite@latest\nyarn create vite\n```\n\n### nvm\n\n---\n\n[nvm下载地址](https://github.com/coreybutler/nvm-windows/releases)\n\n查看所有安装的 `node` 版本\n\n```powershell\nnvm list\n```\n\n查看所有 `node` 的官方版本\n\n```powershell\nnvm list available\n```\n\n安装对应版本号的 `node` \n\n```powershell\nnvm install <版本号>\n```\n\n切换 `node` 版本\n\n```powershell\nnvm use <版本号>\n```\n\n### nrm\n\n`nrm` 安装\n\n```powershell\nnpm install -g nrm\n```\n\n查看所有源，星号表示当前使用源\n\n```powershell\nnrm ls\n```\n\n> 默认有的源  \n> npm ---------- https://registry.npmjs.org/  \n> yarn --------- https://registry.yarnpkg.com/  \n> tencent ------ https://mirrors.cloud.tencent.com/npm/  \n> cnpm --------- https://r.cnpmjs.org/  \n> taobao ------- https://registry.npmmirror.com/  \n> npmMirror ---- https://skimdb.npmjs.com/registry/  \n\n使用源\n\n```powershell\nnrm use <名称>\n```\n\n添加源\n\n```powershell\nnrm add <名称> <源>\n```\n\n测试连接速度\n\n```powershell\nnrm test <名称>\n```\n","source":"_posts/vite_nvm_nrm_使用.md","raw":"---\ntitle: Vite/nvm/nrm 使用\ndate: 2023-10-13 11:54:00\ntags: [Node]\ncover: https://api.onedrive.com/v1.0/shares/s!Andl82vyabVsiNEpqZeRG-PWr2hdIA/root/content\n---\n\n## Vite\n\n### vite init\n\n---\n\n安装 `vite` 的最新版本\n\n```powershell\nnpm init vite@latest\nyarn create vite\n```\n\n### nvm\n\n---\n\n[nvm下载地址](https://github.com/coreybutler/nvm-windows/releases)\n\n查看所有安装的 `node` 版本\n\n```powershell\nnvm list\n```\n\n查看所有 `node` 的官方版本\n\n```powershell\nnvm list available\n```\n\n安装对应版本号的 `node` \n\n```powershell\nnvm install <版本号>\n```\n\n切换 `node` 版本\n\n```powershell\nnvm use <版本号>\n```\n\n### nrm\n\n`nrm` 安装\n\n```powershell\nnpm install -g nrm\n```\n\n查看所有源，星号表示当前使用源\n\n```powershell\nnrm ls\n```\n\n> 默认有的源  \n> npm ---------- https://registry.npmjs.org/  \n> yarn --------- https://registry.yarnpkg.com/  \n> tencent ------ https://mirrors.cloud.tencent.com/npm/  \n> cnpm --------- https://r.cnpmjs.org/  \n> taobao ------- https://registry.npmmirror.com/  \n> npmMirror ---- https://skimdb.npmjs.com/registry/  \n\n使用源\n\n```powershell\nnrm use <名称>\n```\n\n添加源\n\n```powershell\nnrm add <名称> <源>\n```\n\n测试连接速度\n\n```powershell\nnrm test <名称>\n```\n","slug":"vite_nvm_nrm_使用","published":1,"updated":"2023-10-27T10:12:59.648Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clo8gj03n0005t8um490r15ox","content":"<h2 id=\"vite\">Vite</h2>\r\n<h3 id=\"vite-init\">vite init</h3>\r\n<hr />\r\n<p>安装 <code>vite</code> 的最新版本</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">npm init vite@latest<br>yarn create vite<br></code></pre></td></tr></table></figure>\r\n<h3 id=\"nvm\">nvm</h3>\r\n<hr />\r\n<p><a\r\nhref=\"https://github.com/coreybutler/nvm-windows/releases\">nvm下载地址</a></p>\r\n<p>查看所有安装的 <code>node</code> 版本</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">nvm list<br></code></pre></td></tr></table></figure>\r\n<p>查看所有 <code>node</code> 的官方版本</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">nvm list available<br></code></pre></td></tr></table></figure>\r\n<p>安装对应版本号的 <code>node</code></p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">nvm install &lt;版本号&gt;<br></code></pre></td></tr></table></figure>\r\n<p>切换 <code>node</code> 版本</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">nvm use &lt;版本号&gt;<br></code></pre></td></tr></table></figure>\r\n<h3 id=\"nrm\">nrm</h3>\r\n<p><code>nrm</code> 安装</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">npm install <span class=\"hljs-literal\">-g</span> nrm<br></code></pre></td></tr></table></figure>\r\n<p>查看所有源，星号表示当前使用源</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">nrm <span class=\"hljs-built_in\">ls</span><br></code></pre></td></tr></table></figure>\r\n<blockquote>\r\n<p>默认有的源<br />\r\nnpm ---------- https://registry.npmjs.org/<br />\r\nyarn --------- https://registry.yarnpkg.com/<br />\r\ntencent ------ https://mirrors.cloud.tencent.com/npm/<br />\r\ncnpm --------- https://r.cnpmjs.org/<br />\r\ntaobao ------- https://registry.npmmirror.com/<br />\r\nnpmMirror ---- https://skimdb.npmjs.com/registry/</p>\r\n</blockquote>\r\n<p>使用源</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">nrm use &lt;名称&gt;<br></code></pre></td></tr></table></figure>\r\n<p>添加源</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">nrm add &lt;名称&gt; &lt;源&gt;<br></code></pre></td></tr></table></figure>\r\n<p>测试连接速度</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">nrm test &lt;名称&gt;<br></code></pre></td></tr></table></figure>\r\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"vite\">Vite</h2>\r\n<h3 id=\"vite-init\">vite init</h3>\r\n<hr />\r\n<p>安装 <code>vite</code> 的最新版本</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">npm init vite@latest<br>yarn create vite<br></code></pre></td></tr></table></figure>\r\n<h3 id=\"nvm\">nvm</h3>\r\n<hr />\r\n<p><a\r\nhref=\"https://github.com/coreybutler/nvm-windows/releases\">nvm下载地址</a></p>\r\n<p>查看所有安装的 <code>node</code> 版本</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">nvm list<br></code></pre></td></tr></table></figure>\r\n<p>查看所有 <code>node</code> 的官方版本</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">nvm list available<br></code></pre></td></tr></table></figure>\r\n<p>安装对应版本号的 <code>node</code></p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">nvm install &lt;版本号&gt;<br></code></pre></td></tr></table></figure>\r\n<p>切换 <code>node</code> 版本</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">nvm use &lt;版本号&gt;<br></code></pre></td></tr></table></figure>\r\n<h3 id=\"nrm\">nrm</h3>\r\n<p><code>nrm</code> 安装</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">npm install <span class=\"hljs-literal\">-g</span> nrm<br></code></pre></td></tr></table></figure>\r\n<p>查看所有源，星号表示当前使用源</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">nrm <span class=\"hljs-built_in\">ls</span><br></code></pre></td></tr></table></figure>\r\n<blockquote>\r\n<p>默认有的源<br />\r\nnpm ---------- https://registry.npmjs.org/<br />\r\nyarn --------- https://registry.yarnpkg.com/<br />\r\ntencent ------ https://mirrors.cloud.tencent.com/npm/<br />\r\ncnpm --------- https://r.cnpmjs.org/<br />\r\ntaobao ------- https://registry.npmmirror.com/<br />\r\nnpmMirror ---- https://skimdb.npmjs.com/registry/</p>\r\n</blockquote>\r\n<p>使用源</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">nrm use &lt;名称&gt;<br></code></pre></td></tr></table></figure>\r\n<p>添加源</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">nrm add &lt;名称&gt; &lt;源&gt;<br></code></pre></td></tr></table></figure>\r\n<p>测试连接速度</p>\r\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs powershell\">nrm test &lt;名称&gt;<br></code></pre></td></tr></table></figure>\r\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckw4kuyjd0003z8um1sqshit7","tag_id":"ckw4kuyjk0009z8umb2wk4thg","_id":"ckw4kuyjl000dz8um00bt7of7"},{"post_id":"ckw4kuyjh0006z8um9g0c5b49","tag_id":"ckw4kuyjk000cz8um6d02he5a","_id":"ckw4kuyjl000gz8umcabxd8ng"},{"post_id":"ckw4kuyjh0006z8um9g0c5b49","tag_id":"ckw4kuyjl000ez8um8u2wb7k9","_id":"ckw4kuyjl000hz8um50rfecd0"},{"post_id":"ckw4kuyji0007z8umcmu09pwp","tag_id":"ckw4kuyjl000fz8umhmygcnfm","_id":"ckw4kuyjm000jz8um31jzac7r"},{"post_id":"ckw4kuyji0007z8umcmu09pwp","tag_id":"ckw4kuyjm000iz8uma84za6um","_id":"ckw4kuyjm000kz8umc3bh1uvj"},{"post_id":"ckw4kuyjw000lz8um5tq22atn","tag_id":"ckw4kuyjf0004z8um7d8q1crh","_id":"ckw4kuyjy000nz8um27xqd5m9"},{"post_id":"clo8gj03e0000t8um6fli2fss","tag_id":"ckw4kuyjf0004z8um7d8q1crh","_id":"clo8gj03i0002t8um7wzyfrhk"},{"post_id":"clo8gj03e0000t8um6fli2fss","tag_id":"ckw4kuyjj0008z8umhwhndxhh","_id":"clo8gj03j0003t8um9c3l3l76"},{"post_id":"clo8gj03g0001t8um3fbjdsh4","tag_id":"ckw4kuyjk0009z8umb2wk4thg","_id":"clo8gj03j0004t8um4vhu0gs9"},{"post_id":"clo8gj03n0005t8um490r15ox","tag_id":"ckw4kuyjm000iz8uma84za6um","_id":"clo8gj03o0006t8um0x245m1e"}],"Tag":[{"name":"数学","_id":"ckw4kuyjf0004z8um7d8q1crh"},{"name":"Markdown","_id":"ckw4kuyjj0008z8umhwhndxhh"},{"name":"测试","_id":"ckw4kuyjk0009z8umb2wk4thg"},{"name":"算法","_id":"ckw4kuyjk000cz8um6d02he5a"},{"name":"Java","_id":"ckw4kuyjl000ez8um8u2wb7k9"},{"name":"HTML","_id":"ckw4kuyjl000fz8umhmygcnfm"},{"name":"Node","_id":"ckw4kuyjm000iz8uma84za6um"}]}}